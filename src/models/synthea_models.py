"""Synthea Data Models

Simple dataclass models representing the exact structure of Synthea CSV files.
These models correspond to the FHIR-based synthetic patient data generated by Synthea.
"""

from __future__ import annotations

from dataclasses import dataclass, field
from typing import Optional, List


@dataclass
class Allergy:
    """Allergy model corresponding to allergies.csv"""
    START: str
    STOP: Optional[str]
    PATIENT: str
    ENCOUNTER: str
    CODE: str
    DESCRIPTION: str


@dataclass
class CarePlan:
    """Care Plan model corresponding to careplans.csv"""
    Id: str
    START: str
    STOP: Optional[str]
    PATIENT: str
    ENCOUNTER: str
    CODE: str
    DESCRIPTION: str
    REASONCODE: Optional[str]
    REASONDESCRIPTION: Optional[str]


@dataclass
class Condition:
    """Condition model corresponding to conditions.csv"""
    START: str
    STOP: Optional[str]
    PATIENT: str
    ENCOUNTER: str
    CODE: str
    DESCRIPTION: str


@dataclass
class Encounter:
    """Encounter model corresponding to encounters.csv"""
    Id: str
    START: str
    STOP: Optional[str]
    PATIENT: str
    PROVIDER: str
    PAYER: str
    ENCOUNTERCLASS: str
    CODE: str
    DESCRIPTION: str
    BASE_ENCOUNTER_COST: float
    TOTAL_CLAIM_COST: float
    PAYER_COVERAGE: float
    REASONCODE: Optional[str]
    REASONDESCRIPTION: Optional[str]
    
    # Related data grouped by encounter
    allergies: List[Allergy] = field(default_factory=list)
    careplans: List[CarePlan] = field(default_factory=list)
    conditions: List[Condition] = field(default_factory=list)
    imaging_studies: List[ImagingStudy] = field(default_factory=list)
    immunizations: List[Immunization] = field(default_factory=list)
    medications: List[Medication] = field(default_factory=list)
    observations: List[Observation] = field(default_factory=list)
    procedures: List[Procedure] = field(default_factory=list)


@dataclass
class ImagingStudy:
    """Imaging Study model corresponding to imaging_studies.csv"""
    Id: str
    DATE: str
    PATIENT: str
    ENCOUNTER: str
    BODYSITE_CODE: str
    BODYSITE_DESCRIPTION: str
    MODALITY_CODE: str
    MODALITY_DESCRIPTION: str
    SOP_CODE: str
    SOP_DESCRIPTION: str


@dataclass
class Immunization:
    """Immunization model corresponding to immunizations.csv"""
    DATE: str
    PATIENT: str
    ENCOUNTER: str
    CODE: str
    DESCRIPTION: str
    BASE_COST: float


@dataclass
class Medication:
    """Medication model corresponding to medications.csv"""
    START: str
    STOP: Optional[str]
    PATIENT: str
    PAYER: str
    ENCOUNTER: str
    CODE: str
    DESCRIPTION: str
    BASE_COST: float
    PAYER_COVERAGE: float
    DISPENSES: int
    TOTALCOST: float
    REASONCODE: Optional[str]
    REASONDESCRIPTION: Optional[str]


@dataclass
class Observation:
    """Observation model corresponding to observations.csv"""
    DATE: str
    PATIENT: str
    ENCOUNTER: str
    CODE: str
    DESCRIPTION: str
    VALUE: Optional[str]
    UNITS: Optional[str]
    TYPE: str


@dataclass
class Organization:
    """Organization model corresponding to organizations.csv"""
    Id: str
    NAME: str
    ADDRESS: str
    CITY: str
    STATE: str
    ZIP: str
    LAT: float
    LON: float
    PHONE: Optional[str]
    REVENUE: float
    UTILIZATION: int


@dataclass
class Patient:
    """Patient model corresponding to patients.csv"""
    Id: str
    BIRTHDATE: str
    DEATHDATE: Optional[str]
    SSN: str
    DRIVERS: Optional[str]
    PASSPORT: Optional[str]
    PREFIX: Optional[str]
    FIRST: str
    LAST: str
    SUFFIX: Optional[str]
    MAIDEN: Optional[str]
    MARITAL: Optional[str]
    RACE: str
    ETHNICITY: str
    GENDER: str
    BIRTHPLACE: str
    ADDRESS: str
    CITY: str
    STATE: str
    COUNTY: str
    ZIP: str
    LAT: float
    LON: float
    HEALTHCARE_EXPENSES: float
    HEALTHCARE_COVERAGE: float
    
    # Related data
    payer_transitions: List[PayerTransition] = field(default_factory=list)
    encounters: List[Encounter] = field(default_factory=list)


@dataclass
class PayerTransition:
    """Payer Transition model corresponding to payer_transitions.csv"""
    PATIENT: str
    START_YEAR: int
    END_YEAR: Optional[int]
    PAYER: str
    OWNERSHIP: str


@dataclass
class Payer:
    """Payer model corresponding to payers.csv"""
    Id: str
    NAME: str
    ADDRESS: Optional[str]
    CITY: Optional[str]
    STATE_HEADQUARTERED: Optional[str]
    ZIP: Optional[str]
    PHONE: Optional[str]
    AMOUNT_COVERED: float
    AMOUNT_UNCOVERED: float
    REVENUE: float
    COVERED_ENCOUNTERS: int
    UNCOVERED_ENCOUNTERS: int
    COVERED_MEDICATIONS: int
    UNCOVERED_MEDICATIONS: int
    COVERED_PROCEDURES: int
    UNCOVERED_PROCEDURES: int
    COVERED_IMMUNIZATIONS: int
    UNCOVERED_IMMUNIZATIONS: int
    UNIQUE_CUSTOMERS: int
    QOLS_AVG: float
    MEMBER_MONTHS: int


@dataclass
class Procedure:
    """Procedure model corresponding to procedures.csv"""
    DATE: str
    PATIENT: str
    ENCOUNTER: str
    CODE: str
    DESCRIPTION: str
    BASE_COST: float
    REASONCODE: Optional[str]
    REASONDESCRIPTION: Optional[str]


@dataclass
class Provider:
    """Provider model corresponding to providers.csv"""
    Id: str
    ORGANIZATION: str
    NAME: str
    GENDER: str
    SPECIALITY: str
    ADDRESS: str
    CITY: str
    STATE: str
    ZIP: str
    LAT: float
    LON: float
    UTILIZATION: int


# Export all models
__all__ = [
    'Allergy',
    'CarePlan', 
    'Condition',
    'Encounter',
    'ImagingStudy',
    'Immunization',
    'Medication',
    'Observation',
    'Organization',
    'Patient',
    'PayerTransition',
    'Payer',
    'Procedure',
    'Provider'
]